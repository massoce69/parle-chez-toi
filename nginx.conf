events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Configuration des logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Configuration de base
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    server {
        listen 80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;

        # Configuration pour les fichiers statiques
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # Servir les médias depuis les volumes montés
        location /media/movies/ {
            alias /media/movies/;
            expires 1y;
            add_header Cache-Control "public";
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Range";
            
            # Support du streaming vidéo
            location ~* \.(mp4|webm|ogg|avi|mkv|mov|wmv|flv|m4v)$ {
                mp4;
                mp4_buffer_size 1m;
                mp4_max_buffer_size 5m;
                add_header Accept-Ranges bytes;
            }
        }

        location /media/series/ {
            alias /media/series/;
            expires 1y;
            add_header Cache-Control "public";
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, OPTIONS";
            add_header Access-Control-Allow-Headers "Range";
            
            location ~* \.(mp4|webm|ogg|avi|mkv|mov|wmv|flv|m4v)$ {
                mp4;
                mp4_buffer_size 1m;
                mp4_max_buffer_size 5m;
                add_header Accept-Ranges bytes;
            }
        }

        location /media/posters/ {
            alias /media/posters/;
            expires 1y;
            add_header Cache-Control "public";
            add_header Access-Control-Allow-Origin "*";
        }

        location /media/banners/ {
            alias /media/banners/;
            expires 1y;
            add_header Cache-Control "public";
            add_header Access-Control-Allow-Origin "*";
        }

        # Configuration pour React Router (SPA)
        location / {
            try_files $uri $uri/ /index.html;
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # API proxy vers Supabase (optionnel)
        location /api/ {
            proxy_pass https://hoowaqdxwvcfwwvanixo.supabase.co/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Gestion des erreurs
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}